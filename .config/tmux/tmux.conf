# ============================================= #
# Start with defaults from the Sensible plugin  #
# --------------------------------------------- #
# run-shell /Users/user/.config/tmux/plugins/tmux-sensible/sensible.tmux
# ============================================= #



# set  -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

set  -g base-index      1
setw -g pane-base-index 1



new-session





set -g status-keys vi
set -g mode-keys   vi









setw -g aggressive-resize off
setw -g clock-mode-style  12
set  -s escape-time       0
set  -g history-limit     50000



# ============================================= #
# Load plugins with Home Manager                #
# --------------------------------------------- #



# tmuxplugin-fzf-tmux-url
# ---------------------



# run-shell /Users/user/tmux/plugins/fzf-tmux-url/fzf-url.tmux




# tmuxplugin-extrakto
# ---------------------



# run-shell /Users/user/tmux/plugins/extrakto/extrakto.tmux



# ============================================= #



unbind C-b
set-option -g prefix M-TAB
bind-key M-TAB send-prefix



# set-option -sa terminal-overrides ',st-256color:RGB'



# when a window is closed and the window number is freed,
# the following windows are renumbered using this
set -g renumber-windows on



set -g mouse on



set -g set-titles on



# autoread in vim may not work otherwise
set -g focus-events on




# required for x clipboard integration
# unbind p
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
# bind-key -n M-p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"



# break to own window with Alt-b
bind-key -n M-b break-pane



# toggle fullscreen with Alt-f
bind-key -n M-f resize-pane -Z



# kill pane with Alt-Shift-q
bind-key -n M-Q kill-pane



# create new window with Alt-n
bind-key -n M-n new-window -c "#{pane_current_path}"




# Alt-t for horizontal split
bind-key -n M-t split-window -c "#{pane_current_path}"



# Alt-m for 1/4 horizontal split
bind-key -n M-m split-window -c "#{pane_current_path}" -p 25



# Alt-Shift-M for vertical split
bind-key -n M-M split-window -h -c "#{pane_current_path}"



# Alt-[ for entering copy-mode
bind-key -n M-[ copy-mode

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l



# move focused pane with Alt-Shift-vim_key
bind-key -n M-K swap-pane -U
bind-key -n M-H swap-pane -D
bind-key -n M-J swap-pane -D
bind-key -n M-L swap-pane -U
# switch to nth window with Alt-n
bind-key -n M-1 select-window -t :=1
bind-key -n M-2 select-window -t :=2
bind-key -n M-3 select-window -t :=3
bind-key -n M-4 select-window -t :=4
bind-key -n M-5 select-window -t :=5
bind-key -n M-6 select-window -t :=6
bind-key -n M-7 select-window -t :=7
bind-key -n M-8 select-window -t :=8
bind-key -n M-9 select-window -t :=9



# move active pane to nth window to Alt-Shift-n
bind-key -n "M-!" join-pane -t :1
bind-key -n "M-@" join-pane -t :2
bind-key -n "M-#" join-pane -t :3
bind-key -n "M-\$" join-pane -t :4
bind-key -n "M-%" join-pane -t :5
bind-key -n "M-^" join-pane -t :6
bind-key -n "M-&" join-pane -t :7
bind-key -n "M-*" join-pane -t :8
bind-key -n "M-(" join-pane -t :9




set -g status-right '[#{session_name}] @#{host_short}'
set -g status-left ''
set -g window-status-format ' #F#I:#W ' # spaces for padding
set -g window-status-current-format ' #F#I:#W ' # spaces for padding
set -g window-status-current-format ' #F#I:#W '
set -g window-status-current-style "fg=2,bg=terminal"




# The statusbar
set -g status-position bottom
set -g status-justify centre
set -g status-bg default
set -g status-style bg=default
set -g status-fg colour253
set -g status-interval 10



# The messages
set -g message-style fg=magenta,bg=terminal
set -g message-command-style fg=blue,bg=terminal



# The panes
set -g pane-border-style fg=colour235,bg=terminal
set -g pane-active-border-style fg=magenta,bg=terminal
